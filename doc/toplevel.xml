<asdoc>

<classRec name='GeomUtil' fullname='cv.util:GeomUtil' sourcefile='H:\SVN\CourseVector\global\as3\classes\cv\util\GeomUtil.as' namespace='cv.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  A collection of useful geometry related functions. Some are actually replacements for built in Math
  class methods becuase they are more effecient than the default.
          ]]></description>
<langversion><![CDATA[3.0
     ]]></langversion>
<playerversion><![CDATA[Flash 9
  ]]></playerversion>
</classRec>
<method name='getAngle' fullname='cv.util:GeomUtil/getAngle' isStatic='true' isFinal='false' isOverride='false'  param_names='point1;point2' param_types='flash.geom:Point;flash.geom:Point' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[
   Gets the angle of the target point based on the given differences in distance.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[point1<Point> The first point
   ]]></param>
<param><![CDATA[point2<Point> The second point to base the angle on
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The angle between the two points in radians
   
   ]]></return>
</method>
<method name='getDistance' fullname='cv.util:GeomUtil/getDistance' isStatic='true' isFinal='false' isOverride='false'  param_names='x1;x2;y1;y2' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Object'>
<description><![CDATA[
   Used to determine the distance between two points.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[x1<Number> The x of point 1
   ]]></param>
<param><![CDATA[x2<Number> The x of point 2
   ]]></param>
<param><![CDATA[y1<Number> The y of point 1
   ]]></param>
<param><![CDATA[y2<Number> The y of point 2
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[An object with the difference between the x coordinates, dx. The difference
      between the y coordinates, dy. The actual distance, dist, and the distance
      squared, distSQ.
   
   ]]></return>
</method>
<method name='getDistance3D' fullname='cv.util:GeomUtil/getDistance3D' isStatic='true' isFinal='false' isOverride='false'  param_names='x1;x2;y1;y2;z1;z2' param_types='Number;Number;Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[
   Used to determine the distance between two 3D points.
   
   ]]></description>
<param><![CDATA[x1<Number> The x of point 1
   ]]></param>
<param><![CDATA[x2<Number> The x of point 2
   ]]></param>
<param><![CDATA[y1<Number> The y of point 1
   ]]></param>
<param><![CDATA[y2<Number> The y of point 2
   ]]></param>
<param><![CDATA[z1<Number> The z of point 1
   ]]></param>
<param><![CDATA[z2<Number> The z of point 2
   ]]></param>
<return><![CDATA[The distance between the two points.
   ]]></return>
</method>
<method name='rotateCoord' fullname='cv.util:GeomUtil/rotateCoord' isStatic='true' isFinal='false' isOverride='false'  param_names='x;y;sin;cos;reverse' param_types='Number;Number;Number;Number;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='flash.geom:Point'>
<description><![CDATA[
   Takes a given coordinate and rotates it in a 2D space. This is used
   for calculations like collosions detection.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[x<Number> The x coordinate
   ]]></param>
<param><![CDATA[y<Number> The y coordinate
   ]]></param>
<param><![CDATA[sin<Number> The sine of the angle to rotate
   ]]></param>
<param><![CDATA[cos<Number> The cosine of the angle to rotate
   ]]></param>
<param><![CDATA[reverse<Number> Which direction to rotate
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The adjusted point after rotation.
   
   ]]></return>
<see><![CDATA[#getAngle()
   
   ]]></see>
</method>
<method name='rotatePoint' fullname='cv.util:GeomUtil/rotatePoint' isStatic='true' isFinal='false' isOverride='false'  param_names='point;centerPoint;angle' param_types='flash.geom:Point;flash.geom:Point;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[
   Rotates a Point around another Point by the specified angle.
   
   ]]></description>
<category><![CDATA[Method
  ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[point The Point to rotate.
   ]]></param>
<param><![CDATA[centerPoint The Point to rotate this Point around.
   ]]></param>
<param><![CDATA[angle The angle (in degrees) to rotate this point.
   
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
</method>
<method name='turnToPath' fullname='cv.util:GeomUtil/turnToPath' isStatic='true' isFinal='false' isOverride='false'  param_names='point' param_types='flash.geom:Point' param_defaults='undefined' result_type='Number'>
<description><![CDATA[
   Returns the degree to rotate to point in that direction. This assumes you are at
   point 0,0.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[x<Number> The target x velocity.
   ]]></param>
<param><![CDATA[y<Number> The target y velocity.
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The degrees to rotate
   
   ]]></return>
<see><![CDATA[#rad2Deg()
   ]]></see>
<see><![CDATA[#getAngle()
   
   ]]></see>
</method>
<classRec name='MathUtil' fullname='cv.util:MathUtil' sourcefile='H:\SVN\CourseVector\global\as3\classes\cv\util\MathUtil.as' namespace='cv.util' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  A collection of useful math related functions. Some are actually replacements for built in Math
  class methods becuase they are more effecient than the default.
          ]]></description>
<langversion><![CDATA[3.0
     ]]></langversion>
<playerversion><![CDATA[Flash 9
  ]]></playerversion>
</classRec>
<method name='abs' fullname='cv.util:MathUtil/abs' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='Number'>
<description><![CDATA[
   A more effecient way of calculating the absolute value of a number.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[value<Number> The number to use
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The absolute value of the given number
   
   ]]></return>
</method>
<method name='addLeadingZero' fullname='cv.util:MathUtil/addLeadingZero' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='String'>
</method>
<method name='ceil' fullname='cv.util:MathUtil/ceil' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='int'>
<description><![CDATA[
   A more effecient way of calculating the ceiling value of a number.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[value<Number> The number to use
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The ceiling value of the given number
   
   ]]></return>
</method>
<method name='clamp' fullname='cv.util:MathUtil/clamp' isStatic='true' isFinal='false' isOverride='false'  param_names='min;max;value' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[
   Ensures a given number is between the minimum and maximum limits. Useful
   to keep a value between 0 and 1 for instance.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[min<Number> The lower limit of the range.
   ]]></param>
<param><![CDATA[max<Number> The upper limit of the range.
   ]]></param>
<param><![CDATA[value<Number> The number to test
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[A number between the minimum and maximum limits.
   
   ]]></return>
</method>
<method name='degreesToRadians' fullname='cv.util:MathUtil/degreesToRadians' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='Number'>
<description><![CDATA[
   Converts degrees to radians.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[n<Number> The degree to convert
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The equivalent radians.
   
   ]]></return>
</method>
<method name='floor' fullname='cv.util:MathUtil/floor' isStatic='true' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='int'>
<description><![CDATA[
   A more effecient way of calculating the floor value of a number.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[value<Number> The number to use
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The floored value of the given number
   
   ]]></return>
</method>
<method name='interpolate' fullname='cv.util:MathUtil/interpolate' isStatic='true' isFinal='false' isOverride='false'  param_names='amount;minimum;maximum' param_types='Number;Number;Number' param_defaults='undefined;undefined;undefined' result_type='Number'>
</method>
<method name='isPrime' fullname='cv.util:MathUtil/isPrime' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[
   Used to determine if a number is a prime number or not.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[n<Number> The number to test.
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[True or false whether the number is prime.
   
   ]]></return>
</method>
<method name='radiansToDegrees' fullname='cv.util:MathUtil/radiansToDegrees' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='Number'>
<description><![CDATA[
   Converts radians to degrees.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[n<Number> The radian to convert
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The equivalent degrees.
   
   ]]></return>
</method>
<method name='randomRange' fullname='cv.util:MathUtil/randomRange' isStatic='true' isFinal='false' isOverride='false'  param_names='min;max' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[
   Return a random number between a range of numbers
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[min<Number> The minimum number in the range
   ]]></param>
<param><![CDATA[max<Number> The maximum number in the range
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[A random number between the two numbers given.
   
   ]]></return>
</method>
<method name='thousandSeparator' fullname='cv.util:MathUtil/thousandSeparator' isStatic='true' isFinal='false' isOverride='false'  param_names='n' param_types='Number' param_defaults='undefined' result_type='String'>
<description><![CDATA[
   Converts a large number intro a comma delimited string. From
   1000 to 1,000.
   
   ]]></description>
<category><![CDATA[Method
   ]]></category>
<langversion><![CDATA[3.0 
   ]]></langversion>
<param><![CDATA[n<Number> The number to convert.
   ]]></param>
<playerversion><![CDATA[Flash 9
   ]]></playerversion>
<return><![CDATA[The converted number.
   
   ]]></return>
</method>
<field name='_DEG2RAD' fullname='cv.util:MathUtil/protected:_DEG2RAD' type='Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<field name='_RAD2DEG' fullname='cv.util:MathUtil/protected:_RAD2DEG' type='Number' isStatic='true' isConst='true' defaultValue='unknown' >
</field>
<packageRec name='cv.orion.null' fullname='cv.orion.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='ParticleVO' fullname='cv.orion:ParticleVO' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\ParticleVO.as' namespace='cv.orion' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  ParticleVO is a value object class. It contains properties used by each
  particle. Having a specific class with the explicit properties helps
  the player manage memory usage.
  ]]></description>
</classRec>
<field name='active' fullname='cv.orion:ParticleVO/active' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
   Whether the particle is active or not.
   ]]></description>
</field>
<field name='angularVelocity' fullname='cv.orion:ParticleVO/angularVelocity' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The angular (rotational) velocity of the particle
   ]]></description>
</field>
<field name='currentFrame' fullname='cv.orion:ParticleVO/currentFrame' type='int' isStatic='false' isConst='false' >
<description><![CDATA[
   The current frame of the particle. This is saved becuase the particle
   only has an image of one frame.
   ]]></description>
</field>
<field name='mass' fullname='cv.orion:ParticleVO/mass' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The mass of the particle
   ]]></description>
</field>
<field name='paused' fullname='cv.orion:ParticleVO/paused' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
   If the particle is still active but just paused. Used
   with StopEdgeFilter
   ]]></description>
</field>
<field name='target' fullname='cv.orion:ParticleVO/target' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[
   The actual item on the display list being animated
   ]]></description>
</field>
<field name='timeStamp' fullname='cv.orion:ParticleVO/timeStamp' type='int' isStatic='false' isConst='false' >
<description><![CDATA[
   The time stamp on the particle, used to determine the lifespan of each
   particle running.
   ]]></description>
</field>
<field name='velocity' fullname='cv.orion:ParticleVO/velocity' type='flash.geom:Point' isStatic='false' isConst='false' >
<description><![CDATA[
   The velocity of the particle
   ]]></description>
</field>
<packageRec name='cv.orion.interfaces.null' fullname='cv.orion.interfaces.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<interfaceRec name='IFilter' fullname='cv.orion.interfaces:IFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\interfaces\IFilter.as' namespace='cv.orion.interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  Implement the IFilter interface to create a custom particle filter. 
  A particle filter applies a specific force or action to be applied
  to the particle.
  
  <p>Such forces could be gravity, a spring motion, or even fading 
  the particle. The combination of these filters are strung
  together to form an effect.</p>
  
  ]]></description>
<see><![CDATA[cv.Orion
  ]]></see>
</interfaceRec>
<method name='applyFilter' fullname='cv.orion.interfaces:IFilter/cv.orion.interfaces:IFilter:applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
   Applies the specified filter to a particular particle. 
   
   ]]></description>
<param><![CDATA[particle The individual particle.
   ]]></param>
<param><![CDATA[target The emitter associated with the particle.
   ]]></param>
</method>
<packageRec name='cv.orion.interfaces.null' fullname='cv.orion.interfaces.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<interfaceRec name='IOutput' fullname='cv.orion.interfaces:IOutput' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\interfaces\IOutput.as' namespace='cv.orion.interfaces' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[
  Implement the IOutput interface to create a custom output class. An output class 
  controls how fast and how many particles are emitted from the emitter. The default
  is SteadyOutput with the default rating.
  
  <p>Output classes can vary in capabilities, but ultimately choose the one that suites
  your needs. More often than not, the SteadyOutput will accomplish your goals.</p>
  ]]></description>
</interfaceRec>
<method name='pause' fullname='cv.orion.interfaces:IOutput/cv.orion.interfaces:IOutput:pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Pauses the output class.
   ]]></description>
</method>
<method name='play' fullname='cv.orion.interfaces:IOutput/cv.orion.interfaces:IOutput:play' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Resumes or plays the output class.
   ]]></description>
</method>
<method name='update' fullname='cv.orion.interfaces:IOutput/cv.orion.interfaces:IOutput:update' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   This is called everytime the particles are called to update and be redrawn. Depending
   on the output class, this can determine the output of the particles.
   
   ]]></description>
<param><![CDATA[emitter The emitter to be used.
   ]]></param>
</method>
<method name='paused' fullname='cv.orion.interfaces:IOutput/cv.orion.interfaces:IOutput:paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   Gets or sets the paused property
   ]]></description>
</method>
<method name='paused' fullname='cv.orion.interfaces:IOutput/cv.orion.interfaces:IOutput:paused/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<packageRec name='cv.orion.presets.null' fullname='cv.orion.presets.null'>
<description><![CDATA[
Orion �2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='Default' fullname='cv.orion.presets:Default' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\presets\Default.as' namespace='cv.orion.presets' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
</classRec>
<method name='collide' fullname='cv.orion.presets:Default/collide' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='dust' fullname='cv.orion.presets:Default/dust' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='explode' fullname='cv.orion.presets:Default/explode' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='firework' fullname='cv.orion.presets:Default/firework' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='fountain' fullname='cv.orion.presets:Default/fountain' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='rain' fullname='cv.orion.presets:Default/rain' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='smoke' fullname='cv.orion.presets:Default/smoke' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='snow' fullname='cv.orion.presets:Default/snow' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<method name='sparkler' fullname='cv.orion.presets:Default/sparkler' isStatic='true' isFinal='false' isOverride='false'  result_type='Object'>
</method>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='FadeFilter' fullname='cv.orion.filters:FadeFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\FadeFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The FadeFilter determines at what rate to fade a particle. The closer to 1, the
  slower the particle will fade.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.FadeFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new FadeFilter(0.96)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new FadeFilter(0.96));
  </listing> 
  ]]></example>
</classRec>
<method name='FadeFilter' fullname='cv.orion.filters:FadeFilter/FadeFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='0.95' result_type='*'>
<description><![CDATA[
   Controls how quickly a particle fades.
   
   ]]></description>
<default><![CDATA[0.95
   ]]></default>
<param><![CDATA[value The value to multiply against the particle's alpha. The closer to 1, the 
      slower it will fade.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:FadeFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='value' fullname='cv.orion.filters:FadeFilter/value' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The value to multiply against the particle's alpha. The closer to 1,
   the slower it will fade.
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='WindFilter' fullname='cv.orion.filters:WindFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\WindFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The WindFilter causes particles to be swept to a side at a given rate. Much
  like horizontal gravity.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.WindFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new WindFilter(2)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new WindFilter(2));
  </listing> 
  ]]></example>
</classRec>
<method name='WindFilter' fullname='cv.orion.filters:WindFilter/WindFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='0.3' result_type='*'>
<description><![CDATA[
   Causes particles to be attracted to the floor.
   
   ]]></description>
<default><![CDATA[0.3
   ]]></default>
<param><![CDATA[value The velocity added to the X axis. The higher the number, the stronger
      the wind is. Use negatives to push particles left, positive numbers to push right.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:WindFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='value' fullname='cv.orion.filters:WindFilter/value' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The current rate affeecting th X axis.
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='TargetsGravityFilter' fullname='cv.orion.filters:TargetsGravityFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\TargetsGravityFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The TargetsGravityFilter causes particles to attract to multiple targets. The
  targets added won't be moved by Orion, so when a particle hits, it will bounce
  off of them without pushing the target away.
  
  <p>Using the TargetsGravityFilter, you could easily setup a plantery system
  and actually have planets orbit around each other.</p>
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.TargetsGravityFilter;
  
  var tgf:TargetsGravityFilter = new TargetsGravityFilter();
  tgf.addTarget(mc1, 1000, 20);
  tgf.addTarget(mc2, 2000, 30);
  tgf.addTarget(mc3, 4000, 40);
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[tgf]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(tgf);
  </listing>
  ]]></example>
</classRec>
<method name='abs' fullname='cv.orion.filters:TargetsGravityFilter/protected:abs' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='Number'>
</method>
<method name='addTarget' fullname='cv.orion.filters:TargetsGravityFilter/addTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='target;mass;radius' param_types=';Number;Number' param_defaults='undefined;1000;0' result_type='void'>
<description><![CDATA[
   Adds a target for the particles to have a gravity attraction to.
   
   ]]></description>
<default><![CDATA[1000
   
   ]]></default>
<param><![CDATA[target The target to be added.
   
   ]]></param>
<param><![CDATA[mass The mass given to the target. The higher the number, the stronger
      the gravitational force is.
   ]]></param>
<param><![CDATA[radius The radius of the target.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:TargetsGravityFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<method name='checkCollision' fullname='cv.orion.filters:TargetsGravityFilter/protected:checkCollision' isStatic='false' isFinal='false' isOverride='false'  param_names='o;p' param_types='Object;cv.orion:ParticleVO' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='clearTargets' fullname='cv.orion.filters:TargetsGravityFilter/clearTargets' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Removes all targets from the gravity system, resetting it.
   ]]></description>
</method>
<method name='removeTarget' fullname='cv.orion.filters:TargetsGravityFilter/removeTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='' param_defaults='null' result_type='void'>
<description><![CDATA[
   Removes a target from the gravity system.
   
   ]]></description>
<param><![CDATA[target The target that was added previously.
   ]]></param>
</method>
<field name='_targets' fullname='cv.orion.filters:TargetsGravityFilter/protected:_targets' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='oDist' fullname='cv.orion.filters:TargetsGravityFilter/protected:oDist' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='DragFilter' fullname='cv.orion.filters:DragFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\DragFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The DragFilter determines how easily a particle moves around. The lower the number
  the easier it can move, the higher the number, the slower it moves.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.DragFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new DragFilter(0.7)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new DragFilter(0.7));
  </listing>
  
  ]]></example>
<internal><![CDATA[
  If on a flat surface
  F = Force of Friciton
  u = Coefficient of Friction
  N = Normal Force = mg
   m = Mass
   g = Gravity
  F = uN = umg = (0.3)(1,000kg)(9.8 meters per second2) = 2,940N
  
  If on an incline
  N = mg cos{theta}
  F = mg sin{theta} + uN
  
  We can take mass into account but we can't really take gravity becuase
  this class can't find out what that value is. So in lieu of normal force
  (N) we're going to use the current force... yes I know, it's wrong
  but it should look fine for the purposes of Orion.
  This is really a fake version of friction which simulates it well enough.
  ]]></internal>
</classRec>
<method name='DragFilter' fullname='cv.orion.filters:DragFilter/DragFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='friction' param_types='Number' param_defaults='0.3' result_type='*'>
<description><![CDATA[
   Controls how easily a particle moves around.
   
   ]]></description>
<default><![CDATA[0.3
   ]]></default>
<param><![CDATA[friction The friction used to determine drag.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:DragFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='friction' fullname='cv.orion.filters:DragFilter/friction' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The friction to be applied
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='ColorFilter' fullname='cv.orion.filters:ColorFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\ColorFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The ColorFilter transitions a particle's tint/color to the target color. This filter
  is useful for effects such as the FireworkEffect, where a particle goes from yellow
  to red.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.ColorFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new ColorFilter(0xCC3300)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new ColorFilter(0xCC3300));
  </listing>
  ]]></example>
</classRec>
<method name='ColorFilter' fullname='cv.orion.filters:ColorFilter/ColorFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='color' param_types='uint' param_defaults='0xFFFFFF' result_type='*'>
<description><![CDATA[
   Tweens the tint/color of the particle to the target color specified.
   
   ]]></description>
<default><![CDATA[0xFFFFFF
   ]]></default>
<param><![CDATA[color The target color to match.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:ColorFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<method name='color' fullname='cv.orion.filters:ColorFilter/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='uint'>
<description><![CDATA[
   The target color to match.
   ]]></description>
</method>
<method name='color' fullname='cv.orion.filters:ColorFilter/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='uint' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_clr' fullname='cv.orion.filters:ColorFilter/protected:_clr' type='flash.geom:ColorTransform' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='FrameFilter' fullname='cv.orion.filters:FrameFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\FrameFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The FrameFilter will progress a particles current frame by one each time the particle
  is updated.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.FrameFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new FrameFilter()]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new FrameFilter());
  </listing> 
  ]]></example>
</classRec>
<method name='FrameFilter' fullname='cv.orion.filters:FrameFilter/FrameFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='loop' param_types='Boolean' param_defaults='false' result_type='*'>
<description><![CDATA[
   Causes the particle to go through the frames, with the option of looping.
   
   ]]></description>
<default><![CDATA[false
   ]]></default>
<param><![CDATA[loop Whether to loop the movieclip or not
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:FrameFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='loop' fullname='cv.orion.filters:FrameFilter/loop' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[
   If the filter is set to loop
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='WrapEdgeFilter' fullname='cv.orion.filters:WrapEdgeFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\WrapEdgeFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The WrapEdgeFilter makes a particle 'wrap', and appear at the opposite edge once it's
  hit the edge of the canvas.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the edge filter. The first way it so set it
  via the config object. The second way is to add it to the edgeFilter property itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.WrapEdgeFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {edgeFilter:new WrapEdgeFilter()});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.edgeFilter = new WrapEdgeFilter();
  </listing>
  ]]></example>
</classRec>
<method name='applyFilter' fullname='cv.orion.filters:WrapEdgeFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter()  ]]></copy>
</method>
<field name='dx' fullname='cv.orion.filters:WrapEdgeFilter/protected:dx' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='dy' fullname='cv.orion.filters:WrapEdgeFilter/protected:dy' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='r' fullname='cv.orion.filters:WrapEdgeFilter/protected:r' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='MouseSpringFilter' fullname='cv.orion.filters:MouseSpringFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\MouseSpringFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The MouseSpringFilter causes particles to move toward the mouse in a spring motion.
  If the particle is going too fast when it hits the mouse, it will zoom past it til
  it slows down enough to head back towards the mouse. It will do this til it finally
  stops moving.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.MouseSpringFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new MouseSpringFilter(0.01)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new MouseSpringFilter(0.01));
  </listing> 
  ]]></example>
</classRec>
<method name='MouseSpringFilter' fullname='cv.orion.filters:MouseSpringFilter/MouseSpringFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='springStrength;minDist' param_types='Number;Number' param_defaults='0.05;100' result_type='*'>
<description><![CDATA[
   Causes particles to be attracted to the mouse and move with a spring motion.
   
   ]]></description>
<default><![CDATA[0.05
   
   ]]></default>
<param><![CDATA[springStrength The strength of the spring used in the motion.
   ]]></param>
<param><![CDATA[minDist The minimum distance the particle must be from the mouse
      for the filter to take effect.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:MouseSpringFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='minDist' fullname='cv.orion.filters:MouseSpringFilter/minDist' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The minimum distance the particle must be from the mouse for the filter to take effect.
   ]]></description>
</field>
<field name='oDist' fullname='cv.orion.filters:MouseSpringFilter/protected:oDist' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='springStrength' fullname='cv.orion.filters:MouseSpringFilter/springStrength' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The strength of the spring used in the motion.
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='TargetsSpringFilter' fullname='cv.orion.filters:TargetsSpringFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\TargetsSpringFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The TargetsSpringFilter causes particles to spring to multiple targets. Depending
  on the strength of the spring, the particle might fling past the target, or
  get stuck bouncing back and forth.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.TargetsSpringFilter;
  
  var tgf:TargetsSpringFilter = new TargetsSpringFilter();
  tsf.addTarget(mc1, 0.025);
  tsf.addTarget(mc2, 0.05);
  tsf.addTarget(mc3, 0.025);
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[tgf]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(tgf);
  </listing>
  ]]></example>
</classRec>
<method name='addTarget' fullname='cv.orion.filters:TargetsSpringFilter/addTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='target;springAmount;minDist' param_types=';Number;Number' param_defaults='undefined;0.05;100' result_type='void'>
<description><![CDATA[
   Adds a target for the particles to have a spring attraction to.
   
   ]]></description>
<default><![CDATA[0.05
   
   ]]></default>
<param><![CDATA[target The target to be added.
   ]]></param>
<param><![CDATA[springAmount How strong the spring attraction should be for the specific target.
   ]]></param>
<param><![CDATA[  minDist The minimum distance the particle must be from the mouse
      for the filter to take effect.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:TargetsSpringFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<method name='clearTargets' fullname='cv.orion.filters:TargetsSpringFilter/clearTargets' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Removes all targets from the spring system, resetting it.
   ]]></description>
</method>
<method name='removeTarget' fullname='cv.orion.filters:TargetsSpringFilter/removeTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='target' param_types='' param_defaults='null' result_type='void'>
<description><![CDATA[
   Removes a target from the spring system.
   
   ]]></description>
<param><![CDATA[target The target that was added previously.
   ]]></param>
</method>
<field name='_targets' fullname='cv.orion.filters:TargetsSpringFilter/protected:_targets' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='GravityFilter' fullname='cv.orion.filters:GravityFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\GravityFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The GravityFilter causes the particle to fall downwards towards the floor based on
  the given rate. This is added to the Y velocity each time the particle is updated.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.GravityFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new GravityFilter(0.3)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new GravityFilter(0.3));
  </listing>
  
  ]]></example>
<internal><![CDATA[  F = Force Gravity
  m = Mass
  a = Acceleration
  g = 9.8 meters per second2 or 32.2 feet per second2 (Gravity's rate of acceleration)
  F = mg = ma
  ]]></internal>
</classRec>
<method name='GravityFilter' fullname='cv.orion.filters:GravityFilter/GravityFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='0.3' result_type='*'>
<description><![CDATA[
   Causes particles to be attracted to the floor.
   
   ]]></description>
<default><![CDATA[0.3
   ]]></default>
<param><![CDATA[value The velocity added to the Y axis. The higher the number, the stronger
      the gravitational force is. Use negatives to push particles up, positive numbers to pull down.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:GravityFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='value' fullname='cv.orion.filters:GravityFilter/value' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The current rate affeecting th Y axis.
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='ScaleFilter' fullname='cv.orion.filters:ScaleFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\ScaleFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The ScaleFilter causes particles to grow or shrink based on the given value.
  If the number is 1, it won't do anything. If the number is greater than 1, it will
  cause the particle to grow. If the number is less than 1, it will cause the particle
  to shrink.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.ScaleFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new ScaleFilter(1.1)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new ScaleFilter(1.1));
  </listing> 
  ]]></example>
</classRec>
<method name='ScaleFilter' fullname='cv.orion.filters:ScaleFilter/ScaleFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='0.99' result_type='*'>
<description><![CDATA[
   Causes particle to either shrink or grow depending on the given value.
   
   ]]></description>
<default><![CDATA[0.99
   ]]></default>
<param><![CDATA[value The rate in which to scale the particle.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:ScaleFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='value' fullname='cv.orion.filters:ScaleFilter/value' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The rate in which to scale the particle.
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='CollisionFilter' fullname='cv.orion.filters:CollisionFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\CollisionFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The CollisionFilter causes particles to bounce off each other if they hit.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.CollisionFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new CollisionFilter()]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new CollisionFilter());
  </listing>
  ]]></example>
</classRec>
<method name='applyFilter' fullname='cv.orion.filters:CollisionFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='POINT' fullname='cv.orion.filters:CollisionFilter/protected:POINT' type='flash.geom:Point' isStatic='false' isConst='true' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='angle' fullname='cv.orion.filters:CollisionFilter/protected:angle' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cos' fullname='cv.orion.filters:CollisionFilter/protected:cos' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='oDist' fullname='cv.orion.filters:CollisionFilter/protected:oDist' type='Object' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='pos0' fullname='cv.orion.filters:CollisionFilter/protected:pos0' type='flash.geom:Point' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='pos1' fullname='cv.orion.filters:CollisionFilter/protected:pos1' type='flash.geom:Point' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='sin' fullname='cv.orion.filters:CollisionFilter/protected:sin' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='vel0' fullname='cv.orion.filters:CollisionFilter/protected:vel0' type='flash.geom:Point' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='vel1' fullname='cv.orion.filters:CollisionFilter/protected:vel1' type='flash.geom:Point' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='WanderFilter' fullname='cv.orion.filters:WanderFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\WanderFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The WanderFilter causes Brownian motion on particles. This is useful for effects
  like dust or snow.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.WanderFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new WanderFilter(5)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new WanderFilter(5));
  </listing>
  ]]></example>
</classRec>
<method name='WanderFilter' fullname='cv.orion.filters:WanderFilter/WanderFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='value;friction' param_types='Number;Number' param_defaults='0.2;0.95' result_type='*'>
<description><![CDATA[
   Causes particle to make random movements.
   
   ]]></description>
<default><![CDATA[0
   ]]></default>
<param><![CDATA[value<Number> How much it will move.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:WanderFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='friction' fullname='cv.orion.filters:WanderFilter/friction' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The friction applied to it's wandering
   ]]></description>
</field>
<field name='value' fullname='cv.orion.filters:WanderFilter/value' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   How much it will move.
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='StopEdgeFilter' fullname='cv.orion.filters:StopEdgeFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\StopEdgeFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The StopEdgeFilter makes a particle stop all motion once it's hit the 
  edge of the canvas.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the edge filter. The first way it so set it
  via the config object. The second way is to add it to the edgeFilter property itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.StopEdgeFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {edgeFilter:new StopEdgeFilter()});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.edgeFilter = new StopEdgeFilter();
  </listing>
  ]]></example>
</classRec>
<method name='applyFilter' fullname='cv.orion.filters:StopEdgeFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='b' fullname='cv.orion.filters:StopEdgeFilter/protected:b' type='Boolean' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='d' fullname='cv.orion.filters:StopEdgeFilter/protected:d' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='r' fullname='cv.orion.filters:StopEdgeFilter/protected:r' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='MouseGravityFilter' fullname='cv.orion.filters:MouseGravityFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\MouseGravityFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The MouseGravityFilter causes the particle be attracted to the mouse. The strength
  of this attraction is determined by the mass given to the mouse. If you use
  a negative value for mass, this will repel items away from the mouse.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.MouseGravityFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new MouseGravityFilter(100)]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new MouseGravityFilter(100));
  </listing>
  ]]></example>
</classRec>
<method name='MouseGravityFilter' fullname='cv.orion.filters:MouseGravityFilter/MouseGravityFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='mass' param_types='Number' param_defaults='1000' result_type='*'>
<description><![CDATA[
   Causes particles to be attracted to the mouse.
   
   ]]></description>
<default><![CDATA[1000
   ]]></default>
<param><![CDATA[mass The mass given to the mouse. The higher the number, the stronger
      the gravitational force is. The lower the number (below zero), the more
      it will repel particles.
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:MouseGravityFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
   ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter()
   
   ]]></copy>
<internal><![CDATA[   Using shortcut of dx / dist instead of Math.cos(angle) and dy / dist instead of math.sin(angle).
   This saves from needing to use Math.atan2(dy, dx) to find the angle in the first place.
   ]]></internal>
</method>
<field name='mass' fullname='cv.orion.filters:MouseGravityFilter/mass' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   Mass
   ]]></description>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='BounceEdgeFilter' fullname='cv.orion.filters:BounceEdgeFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\BounceEdgeFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The BounceEdgeFilter forces a given particle to rebound off any edges it may
  encounter within the bounds of the emitter. 
  
  ]]></description>
<example><![CDATA[There are two ways to apply the edge filter. The first way it so set it
  via the config object. The second way is to add it to the edgeFilter property itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.BounceEdgeFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {edgeFilter:new BounceEdgeFilter(-0.5)});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.edgeFilter = new BounceEdgeFilter(-0.5);
  </listing>
  ]]></example>
</classRec>
<method name='BounceEdgeFilter' fullname='cv.orion.filters:BounceEdgeFilter/BounceEdgeFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='-0.5' result_type='*'>
<description><![CDATA[
   Applies the specified filter to a particular particle. 
   
   ]]></description>
<default><![CDATA[-0.5
   ]]></default>
<param><![CDATA[value<Number> The amount to multiply against the x and y velocity. 
      If negative, it will reverse motion (bounce).
   ]]></param>
</method>
<method name='applyFilter' fullname='cv.orion.filters:BounceEdgeFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<field name='d' fullname='cv.orion.filters:BounceEdgeFilter/protected:d' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='r' fullname='cv.orion.filters:BounceEdgeFilter/protected:r' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='value' fullname='cv.orion.filters:BounceEdgeFilter/value' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.filters.null' fullname='cv.orion.filters.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='TurnToPathFilter' fullname='cv.orion.filters:TurnToPathFilter' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\filters\TurnToPathFilter.as' namespace='cv.orion.filters' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The TurnToPathFilter causes particles to point in the direction they are moving. This
  could be used for a fireworks effect to keep the rocket pointed in the direction it
  is moving.
  
  ]]></description>
<example><![CDATA[There are two ways to apply the filter. The first way it so set it
  via the config object. The second way is to add it to the effectFilters array itself.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.filters.TurnToPathFilter;
  
  // First method
  var e:Orion = new Orion(linkageClass, null, {effectFilters:[new TurnToPathFilter()]});
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.effectFilters.push(new TurnToPathFilter());
  </listing>
  ]]></example>
</classRec>
<method name='applyFilter' fullname='cv.orion.filters:TurnToPathFilter/applyFilter' isStatic='false' isFinal='false' isOverride='false'  param_names='particle;target' param_types='cv.orion:ParticleVO;cv:Orion' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IFilter#applyFilter() ]]></copy>
</method>
<packageRec name='cv.orion.output.null' fullname='cv.orion.output.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='BurstOutput' fullname='cv.orion.output:BurstOutput' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\output\BurstOutput.as' namespace='cv.orion.output' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IOutput' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The BurstOutput class adds the specified number of particles all at once, then
  doesn't add any new particles. This is useful if you want to just setup a system
  of say 10 particles and leave it a that.
  
  ]]></description>
<example><![CDATA[There are two ways to control output. The first way it so set it
  in the constructor. The second way is to add it via the output property.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.output.BurstOutput;
  
  // First method
  var e:Orion = new Orion(linkageClass, new BurstOutput(40));
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.output = new BurstOutput(40);
  </listing>
  ]]></example>
</classRec>
<method name='BurstOutput' fullname='cv.orion.output:BurstOutput/BurstOutput' isStatic='false' isFinal='false' isOverride='false'  param_names='numOfParticles;continous' param_types='uint;Boolean' param_defaults='10;false' result_type='*'>
<description><![CDATA[
   Controls the number of particles that are emitted.
   
   ]]></description>
<default><![CDATA[10
   ]]></default>
<param><![CDATA[numOfParticles<uint> How manu particles to add at once.
   ]]></param>
</method>
<method name='pause' fullname='cv.orion.output:BurstOutput/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#pause() ]]></copy>
</method>
<method name='play' fullname='cv.orion.output:BurstOutput/play' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#play() ]]></copy>
</method>
<method name='reset' fullname='cv.orion.output:BurstOutput/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   To have the particles emitted again, call this method.
   ]]></description>
</method>
<method name='update' fullname='cv.orion.output:BurstOutput/update' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#update() ]]></copy>
</method>
<method name='paused' fullname='cv.orion.output:BurstOutput/paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#paused ]]></copy>
</method>
<method name='paused' fullname='cv.orion.output:BurstOutput/paused/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_paused' fullname='cv.orion.output:BurstOutput/protected:_paused' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='continous' fullname='cv.orion.output:BurstOutput/continous' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   Gets or sets whether this is outputted regularly at each
   render event.
   ]]></description>
</field>
<field name='doOnce' fullname='cv.orion.output:BurstOutput/protected:doOnce' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='particles' fullname='cv.orion.output:BurstOutput/particles' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[
   Gets or sets the number of particles to be outputted.
   ]]></description>
</field>
<packageRec name='cv.orion.output.null' fullname='cv.orion.output.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='FunctionOutput' fullname='cv.orion.output:FunctionOutput' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\output\FunctionOutput.as' namespace='cv.orion.output' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IOutput' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The FunctionOutput class emits particles based on the given function. This allows
  you to pulse ouput of particles just by passing in a function that does that. Or
  if you wanted to create a sine output, create a function that handles that. This
  class is very flexible if used correctly.
  
  ]]></description>
<example><![CDATA[There are two ways to control output. The first way it so set it
  in the constructor. The second way is to add it via the output property.
  
  <p>To use the FunctionOutput class you must first create a function to be used 
  as a callback. In the following example, that is <code>pulse</code>.</p>
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.output.FunctionOutput;
  
  // First method
  var e:Orion = new Orion(linkageClass, new FunctionOutput(pulse));
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.output = new FunctionOutput(pulse);
  
  function pulse(startTime:uint, currentTime:uint):Boolean {
    var modT:uint = (currentTime - startTime) % 1000;
    if(modT < 500) return true;
    return false;
  }
  </listing>
  ]]></example>
</classRec>
<method name='FunctionOutput' fullname='cv.orion.output:FunctionOutput/FunctionOutput' isStatic='false' isFinal='false' isOverride='false'  param_names='callback' param_types='Function' param_defaults='undefined' result_type='*'>
<description><![CDATA[
   Controls how and when the particles are emitted via the callback function.
   
   ]]></description>
<param><![CDATA[callback<Function> The function used to determine when to emit particles.
   ]]></param>
</method>
<method name='pause' fullname='cv.orion.output:FunctionOutput/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#pause() ]]></copy>
</method>
<method name='play' fullname='cv.orion.output:FunctionOutput/play' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#play() ]]></copy>
</method>
<method name='update' fullname='cv.orion.output:FunctionOutput/update' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#update() ]]></copy>
</method>
<method name='callback' fullname='cv.orion.output:FunctionOutput/callback/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[
   Gets or sets the function used to control the output.
   ]]></description>
</method>
<method name='paused' fullname='cv.orion.output:FunctionOutput/paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#paused ]]></copy>
</method>
<method name='callback' fullname='cv.orion.output:FunctionOutput/callback/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='paused' fullname='cv.orion.output:FunctionOutput/paused/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_paused' fullname='cv.orion.output:FunctionOutput/protected:_paused' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='f' fullname='cv.orion.output:FunctionOutput/protected:f' type='Function' isStatic='false' isConst='false' >
<description><![CDATA[
   Function to check against
   
   ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='t' fullname='cv.orion.output:FunctionOutput/protected:t' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[
   Start Time
   
   ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.output.null' fullname='cv.orion.output.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='SteadyOutput' fullname='cv.orion.output:SteadyOutput' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\output\SteadyOutput.as' namespace='cv.orion.output' access='public' baseclass='Object' interfaces='cv.orion.interfaces:IOutput' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The SteadyOutput class outputs particles at a predictable rate. This is useful if
  you just want particles to be outputted and don't care for anything fancy.
  
  ]]></description>
<example><![CDATA[There are two ways to control output. The first way it so set it
  in the constructor. The second way is to add it via the output property.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.output.SteadyOutput;
  
  // First method
  var e:Orion = new Orion(linkageClass, new SteadyOutput(40));
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.output = new SteadyOutput(40);
  </listing> 
  ]]></example>
</classRec>
<method name='SteadyOutput' fullname='cv.orion.output:SteadyOutput/SteadyOutput' isStatic='false' isFinal='false' isOverride='false'  param_names='particlesPerSecond' param_types='Number' param_defaults='20' result_type='*'>
<description><![CDATA[
   Controls the output of the particles of the emitter.
   
   ]]></description>
<default><![CDATA[20
   ]]></default>
<param><![CDATA[particlesPerSecond<Number> The rate at which to output particles
   ]]></param>
</method>
<method name='checkEmit' fullname='cv.orion.output:SteadyOutput/protected:checkEmit' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Checks if it's time to emit particles and how many.
   
   ]]></description>
<param><![CDATA[emitter
   ]]></param>
</method>
<method name='pause' fullname='cv.orion.output:SteadyOutput/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#pause() ]]></copy>
</method>
<method name='play' fullname='cv.orion.output:SteadyOutput/play' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#play() ]]></copy>
</method>
<method name='update' fullname='cv.orion.output:SteadyOutput/update' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#update() ]]></copy>
</method>
<method name='updateTimes' fullname='cv.orion.output:SteadyOutput/protected:updateTimes' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Updates the previous and difference in times.
   This determines when to emit and fix any pause
   issues.
   
   ]]></description>
<param><![CDATA[emitter
   ]]></param>
</method>
<method name='paused' fullname='cv.orion.output:SteadyOutput/paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#paused ]]></copy>
</method>
<method name='paused' fullname='cv.orion.output:SteadyOutput/paused/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_paused' fullname='cv.orion.output:SteadyOutput/protected:_paused' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='dT' fullname='cv.orion.output:SteadyOutput/protected:dT' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='difTime' fullname='cv.orion.output:SteadyOutput/protected:difTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='particlesPerSecond' fullname='cv.orion.output:SteadyOutput/particlesPerSecond' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[
   The current rate assigned to SteadyOutput, in particles per second.
   ]]></description>
</field>
<field name='prevTime' fullname='cv.orion.output:SteadyOutput/protected:prevTime' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.output.null' fullname='cv.orion.output.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='TimedOutput' fullname='cv.orion.output:TimedOutput' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\output\TimedOutput.as' namespace='cv.orion.output' access='public' baseclass='cv.orion.output:SteadyOutput' interfaces='cv.orion.interfaces:IOutput' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The TimedOutput class outputs particles for a specified amount of time. It extends
  the SteadyOutput class, so the rate it outputs can also be adjusted.
  
  ]]></description>
<example><![CDATA[There are two ways to control output. The first way it so set it
  in the constructor. The second way is to add it via the output property.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.output.TimedOutput;
  
  // First method
  var e:Orion = new Orion(linkageClass, new TimedOutput(1000, 40));
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.output = new TimedOutput(1000, 40);
  </listing>
  ]]></example>
</classRec>
<method name='TimedOutput' fullname='cv.orion.output:TimedOutput/TimedOutput' isStatic='false' isFinal='false' isOverride='false'  param_names='duration;particlesPerSecond' param_types='uint;Number' param_defaults='5000;20' result_type='*'>
<description><![CDATA[
   Controls the duration that the particles are emitted.
   
   ]]></description>
<default><![CDATA[5000
   
   ]]></default>
<param><![CDATA[duration<uint> How long the particles will be emitted, in milliseconds.
   ]]></param>
<param><![CDATA[particlesPerSecond<Number> The rate at which to output particles
   ]]></param>
</method>
<method name='reset' fullname='cv.orion.output:TimedOutput/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   After the timer has stopped, you can start the timer again by
   resetting it with this method.
   ]]></description>
</method>
<method name='update' fullname='cv.orion.output:TimedOutput/update' isStatic='false' isFinal='false' isOverride='true'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#update() ]]></copy>
</method>
<field name='duration' fullname='cv.orion.output:TimedOutput/duration' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[
   Gets or sets the duration that the particles are outputted.
   ]]></description>
</field>
<field name='t' fullname='cv.orion.output:TimedOutput/protected:t' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.output.null' fullname='cv.orion.output.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='KeyDownOutput' fullname='cv.orion.output:KeyDownOutput' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\output\KeyDownOutput.as' namespace='cv.orion.output' access='public' baseclass='cv.orion.output:SteadyOutput' interfaces='cv.orion.interfaces:IOutput' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The KeyDownOutput class outputs particles if the specified key is pressed on the keyboard.
  It extends the SteadyOutput class, so the rate it outputs can also be adjusted.
  
  ]]></description>
<example><![CDATA[There are two ways to control output. The first way it so set it
  in the constructor. The second way is to add it via the output property.
  
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.output.KeyDownOutput;
  import flash.ui.Keyboard;
  
  // First method
  var e:Orion = new Orion(linkageClass, new KeyDownOutput(Keyboard.SPACE, this.stage, 40));
  
  // Second method
  var e2:Orion = new Orion(linkageClass);
  e2.output = new KeyDownOutput(Keyboard.SPACE, this.stage, 40)
  </listing>
  ]]></example>
</classRec>
<method name='KeyDownOutput' fullname='cv.orion.output:KeyDownOutput/KeyDownOutput' isStatic='false' isFinal='false' isOverride='false'  param_names='key;target;particlesPerSecond' param_types='uint;flash.display:DisplayObject;Number' param_defaults='undefined;null;20' result_type='*'>
<description><![CDATA[
   Starts and stops outputting particles based on keyboard interaction.
   
   ]]></description>
<default><![CDATA[null
   
   ]]></default>
<param><![CDATA[key Which key to listen for.
   
   ]]></param>
<param><![CDATA[target The target to attach the keyboard listener to.
   ]]></param>
<param><![CDATA[particlesPerSecond The rate at which to output particles
   ]]></param>
</method>
<method name='keyHandler' fullname='cv.orion.output:KeyDownOutput/protected:keyHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:KeyboardEvent' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Determines if they correct key is down or not.
   
   ]]></description>
<param><![CDATA[event
   ]]></param>
</method>
<method name='update' fullname='cv.orion.output:KeyDownOutput/update' isStatic='false' isFinal='false' isOverride='true'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.orion.interfaces.IOutput#update() ]]></copy>
</method>
<method name='target' fullname='cv.orion.output:KeyDownOutput/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
<description><![CDATA[
   Gets or sets the target to attach the keyboard listener to. As en example, you 
   could set this to the stage.
   ]]></description>
</method>
<method name='target' fullname='cv.orion.output:KeyDownOutput/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_target' fullname='cv.orion.output:KeyDownOutput/protected:_target' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='isDown' fullname='cv.orion.output:KeyDownOutput/isDown' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='key' fullname='cv.orion.output:KeyDownOutput/key' type='uint' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.orion.renderers.null' fullname='cv.orion.renderers.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='BitmapRenderer' fullname='cv.orion.renderers:BitmapRenderer' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\renderers\BitmapRenderer.as' namespace='cv.orion.renderers' access='public' baseclass='flash.display:Bitmap' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The BitmapRenderer actually draws the particles and all the animations as a single bitmap.
  This allows you to enabled filters to give really interesting effects which woudl only be
  possible as a bitmap.
     ]]></description>
</classRec>
<method name='BitmapRenderer' fullname='cv.orion.renderers:BitmapRenderer/BitmapRenderer' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
</method>
<method name='clear' fullname='cv.orion.renderers:BitmapRenderer/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Clears the renderer.
   ]]></description>
</method>
<method name='drawTarget' fullname='cv.orion.renderers:BitmapRenderer/protected:drawTarget' isStatic='false' isFinal='false' isOverride='false'  param_names='d' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Gets the bitmap data from the particle and draws it to the bitmapdata.
   
   ]]></description>
<param><![CDATA[d The item to be drawn to the bitmap.
   
   ]]></param>
<private><![CDATA[]]></private>
</method>
<method name='getPalletteMap' fullname='cv.orion.renderers:BitmapRenderer/getPalletteMap' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
   Gets the palletemap if it was set. If it wasn't set, it will just 
   return an empty or null array.
   
   ]]></description>
<return><![CDATA[An array of the pallette colors.
   ]]></return>
</method>
<method name='pause' fullname='cv.orion.renderers:BitmapRenderer/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Pauses the renderer
   ]]></description>
</method>
<method name='play' fullname='cv.orion.renderers:BitmapRenderer/play' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Resumes or plays the renderer
   ]]></description>
</method>
<method name='render' fullname='cv.orion.renderers:BitmapRenderer/render' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[
   Calls the renderer to draw the particles.
   
   ]]></description>
<param><![CDATA[emitter The emitter associated with the particles.
   ]]></param>
</method>
<method name='setPalletteMap' fullname='cv.orion.renderers:BitmapRenderer/setPalletteMap' isStatic='false' isFinal='false' isOverride='false'  param_names='red;green;blue;alpha' param_types='Array;Array;Array;Array' param_defaults='null;null;null;null' result_type='void'>
<description><![CDATA[
   Remaps the color channel values in an image that has up to four arrays of color 
   palette data, one for each channel.
   
   ]]></description>
<default><![CDATA[null
   
   ]]></default>
<param><![CDATA[red If redArray is not null, red = redArray[source red value] else red = source rect value.
   ]]></param>
<param><![CDATA[green If greenArray is not null, green = greenArray[source green value] else green = source green value.
   ]]></param>
<param><![CDATA[blue If blueArray is not null, blue = blueArray[source blue value] else blue = source blue value.
   ]]></param>
<param><![CDATA[alpha If alphaArray is not null, alpha = alphaArray[source alpha value] else alpha = source alpha value.
   ]]></param>
</method>
<method name='stageHandler' fullname='cv.orion.renderers:BitmapRenderer/protected:stageHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Clears and inits the bitmap data once it has access to the stage.
   
   ]]></description>
<param><![CDATA[e
   ]]></param>
</method>
<method name='paused' fullname='cv.orion.renderers:BitmapRenderer/paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   Gets or sets the paused property
   ]]></description>
</method>
<method name='paused' fullname='cv.orion.renderers:BitmapRenderer/paused/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='POINT' fullname='cv.orion.renderers:BitmapRenderer/protected:POINT' type='flash.geom:Point' isStatic='false' isConst='true' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_palletteMap' fullname='cv.orion.renderers:BitmapRenderer/protected:_palletteMap' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paused' fullname='cv.orion.renderers:BitmapRenderer/protected:_paused' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_shape' fullname='cv.orion.renderers:BitmapRenderer/protected:_shape' type='flash.display:Shape' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='debug' fullname='cv.orion.renderers:BitmapRenderer/debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   Turns on debug lines to outline the emitter and canvas dimensions
   ]]></description>
</field>
<field name='drawTargets' fullname='cv.orion.renderers:BitmapRenderer/drawTargets' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   An array of items to be drawn to th renderer.
   ]]></description>
</field>
<field name='postFilters' fullname='cv.orion.renderers:BitmapRenderer/postFilters' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   Fitlers that will be applied after new particles have been drawn to 
   the bitmap.
   ]]></description>
</field>
<field name='preFilters' fullname='cv.orion.renderers:BitmapRenderer/preFilters' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   Filters that will be applied before new particles are drawn to the 
   bitmap.
   ]]></description>
</field>
<packageRec name='cv.orion.renderers.null' fullname='cv.orion.renderers.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='PixelRenderer' fullname='cv.orion.renderers:PixelRenderer' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\orion\renderers\PixelRenderer.as' namespace='cv.orion.renderers' access='public' baseclass='cv.orion.renderers:BitmapRenderer' isFinal='false' isDynamic='false' >
<description><![CDATA[
  The PixelRenderer class acts exactly like the BitmapRenderer class. The one difference
  is that instead of drawing particles to the bitmap, it will draw a single pixel for each
  particles in the Orion instance.
     ]]></description>
</classRec>
<method name='drawTarget' fullname='cv.orion.renderers:PixelRenderer/protected:drawTarget' isStatic='false' isFinal='false' isOverride='true'  param_names='d' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Instead of getting the bitmap data from the particle. It will instead
   draw a single pixel according to the particle's properties. If no
   default color is specified (colorMin, colorMax, color) in the config, 
   or the color is 0 (black) the particle color will default to white.
   
   If you want to specify black as a color and avoid the default
   from being used please use a color as close to black as possible.
   
   ]]></description>
<param><![CDATA[d The particle to get the properties from.
   ]]></param>
<param><![CDATA[e The emitter being used with the particle.
   
   ]]></param>
<private><![CDATA[]]></private>
</method>
<packageRec name='cv.null' fullname='cv.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 9th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='Orion' fullname='cv:Orion' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\Orion.as' namespace='cv' access='public' baseclass='flash.display:Sprite' interfaces='cv.orion.interfaces:IOutput' isFinal='false' isDynamic='false' >
<description><![CDATA[
  <strong>Orion ©2009 Gabriel Mariani, coursevector.com.
  <br/>Visit http://blog.coursevector.com/orion for documentation, updates and more 
  free code.
  <br/>Licensed under the MIT license - see the source file header 
  for more information.</strong>
  <hr>
  Orion is an easy to use and light-weight particle system. It's instance 
  oriented much like GTween so you can re-use and modify easily. It's 
  also very fast, capable of handling over 3000 particles at more than 
  30fps if your computer can handle it. But unless you're doing something 
  really intense you probably won't notice any slowdown. At it's smallest
  Orion will add about 6kb to your filesize.
  <br/><br/>
  The Orion class is the hub of particle system. It  
  determines <strong>where</strong> the particles will be generated.
  All particles are generated within the bounds of the Orion instance.
  So if you set it up to be 100x100, the particles will be generated 
  somewhere within that area. If you set the width and height below
  1 (i.e. 0x0), it will generate all the particles at the center of the 
  instance.
  <br/><br/>
  To control where the particles can be displayed you can modify the 
  canvas property. The canvas is a simple rectange object, changing the
  height, width, and position of it will determine where the particles 
  will be displayed and when the edgeFilter will take action.
  <br/><br/>
  Orion is easy to use and incredibly flexible and customizable. To keep 
  it's size down, there are effectFilters, the more you add the more work 
  Orion has to do which can affect performance and filesize. So keep this 
  in mind before you use every filter and wonder why it's not handling 
  3000 particles easily. Below are some examples to show you how to use 
  Orion and how quickly you can get up and running. Since Orion is so 
  customizable, I thought it would be nice to be able to save those 
  configurations so you can use the same settings again. This is what the 
  presets are used for. They will configure an instance of Orion with the 
  given settings. If you have to find a setting you like you can create 
  your own presets and load them as well.
  
  ]]></description>
<example><![CDATA[The only requirement to use Orion is to have an item exported from the library.
  <br/><br/>
  <listing version="3.0">
  import cv.Orion;
  import cv.orion.preset.Default; // A small set of common presets
  
  var e:Orion = new Orion(linkageClass, null, Default.firework());
  this.addChild(e);
  
  </listing>
  <br/><br/>
  That's it! Although that is a very basic setup but as you can see, it doesn't take much work to get a particle
  system up and running in your code.
     ]]></example>
<metadata>
	<Event owner='cv:Orion' name='resize' type='flash.events.Event' >
<description><![CDATA[
 This event is dispatched each time Orion is resized.
  ]]></description>
<eventType><![CDATA[flash.events.Event
 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='cv:Orion' name='change' type='flash.events.Event' >
<description><![CDATA[
 This event is dispatched each time Orion renders the particles.
  ]]></description>
<eventType><![CDATA[flash.events.Event
 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='Orion' fullname='cv:Orion/Orion' isStatic='false' isFinal='false' isOverride='false'  param_names='spriteClass;output;config;useFrameCaching' param_types='Class;cv.orion.interfaces:IOutput;Object;Boolean' param_defaults='null;null;null;false' result_type='*'>
<description><![CDATA[
   The constructor allows a few common settings to be specified during construction. Options such
   as the output class or any configuration settings.
   
   ]]></description>
<param><![CDATA[spriteClass This is the linkage class of the item you have exported from the library.
   ]]></param>
<param><![CDATA[output Here you can specify which output class you'd like to use. If you don't want to 
   use one, just leave this as <code>null</code>
   ]]></param>
<param><![CDATA[config Here you can pass in a <code>configuration</code> object. A <code>configuration</code> object is generated by a 
   preset or you can write one by hand. Each <code>configuration</code> object can contain an <code>effectFilters</code> array, an
   <code>edgeFilter</code> object, and a <code>settings</code> object. The <code>settings</code> object can contain all the same properties that
   modifying the <code>settings</code> property directly allows.
   ]]></param>
<param><![CDATA[useFrameCaching Frame caching is useful for particles that have a lot of glow filters or native Flash filters applied.
   Turning on frame caching will cause Orion to take a snapshot of each frame of the particle and turn it into a Bitmap and use the Bitmap
   instead. This can greatly increase performance for complicated particles.
   
   ]]></param>
<see><![CDATA[Orion#settings
   ]]></see>
<see><![CDATA[Orion#useFrameCaching
   ]]></see>
</method>
<method name='addParticle' fullname='cv:Orion/protected:addParticle' isStatic='false' isFinal='false' isOverride='false'  param_names='pt' param_types='flash.geom:Point' param_defaults='null' result_type='void'>
<description><![CDATA[
   Adds a new particle to the system. Before creating a new particle, it will check the
   recycle bin of old particles to see if it can match the particle requested. If so, it
   will re-use an old particle rather than create a new one as this is quicker on the 
   player.
   
   ]]></description>
<default><![CDATA[null (getCoordinate)
   
   ]]></default>
<param><![CDATA[pt The point to position the particle at.
   ]]></param>
<param><![CDATA[c The class to be used for the particle.
   ]]></param>
<see><![CDATA[Orion#getCoordinate()
   ]]></see>
<see><![CDATA[Orion#spriteClass
   ]]></see>
</method>
<method name='applyPreset' fullname='cv:Orion/applyPreset' isStatic='false' isFinal='false' isOverride='false'  param_names='config;reset' param_types='Object;Boolean' param_defaults='null;false' result_type='void'>
</method>
<method name='cacheFramesOf' fullname='cv:Orion/protected:cacheFramesOf' isStatic='false' isFinal='false' isOverride='false'  param_names='mc' param_types='flash.display:MovieClip' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   If it's a movieclip, cache it's frames.
   
   ]]></description>
<param><![CDATA[mc The particle to have it's frames cached.
   ]]></param>
</method>
<method name='emit' fullname='cv:Orion/emit' isStatic='false' isFinal='false' isOverride='false'  param_names='point' param_types='flash.geom:Point' param_defaults='null' result_type='void'>
<description><![CDATA[
   Causes the emitter to add particles.
   
   ]]></description>
<param><![CDATA[point Where to position the particle
   ]]></param>
<param><![CDATA[numberOfParticles How many particles are emitted during each emit&#40;&#41; call.
   ]]></param>
</method>
<method name='getColorTransform' fullname='cv:Orion/protected:getColorTransform' isStatic='false' isFinal='false' isOverride='false'  param_names='p;targetColor' param_types='cv.orion:ParticleVO;uint' param_defaults='undefined;undefined' result_type='flash.geom:ColorTransform'>
<description><![CDATA[
   Used to get a colortransform object for a specific particle.
   
   ]]></description>
<internal><![CDATA[Utility function
   
   ]]></internal>
<param><![CDATA[d The particle to be recycled
   ]]></param>
<return><![CDATA[The given colortransform object
   ]]></return>
</method>
<method name='getCoordinate' fullname='cv:Orion/protected:getCoordinate' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.geom:Point'>
<description><![CDATA[
   Returns a coordinate it's designated position.
   
   ]]></description>
<return><![CDATA[Returns a coordinate at the emitters x,y position or within it.
   ]]></return>
</method>
<method name='getNew' fullname='cv:Orion/protected:getNew' isStatic='false' isFinal='false' isOverride='false'  result_type='cv.orion:ParticleVO'>
<description><![CDATA[
   Returns a new particle
   
   ]]></description>
<return><![CDATA[The particle
   ]]></return>
</method>
<method name='getRecycled' fullname='cv:Orion/protected:getRecycled' isStatic='false' isFinal='false' isOverride='false'  result_type='cv.orion:ParticleVO'>
<description><![CDATA[
   Checks the recycle bin if a suitable particle can be re-used.
   
   ]]></description>
<return><![CDATA[The particle
   ]]></return>
</method>
<method name='gotoAndStopCached' fullname='cv:Orion/protected:gotoAndStopCached' isStatic='false' isFinal='false' isOverride='false'  param_names='d;frame' param_types='flash.display:DisplayObject;int' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[
   Sets a given particle to a specific frame in the movieclip, from
   the frame cached in memory.
   
   ]]></description>
<param><![CDATA[d The particle
   ]]></param>
<param><![CDATA[frame The frame number to go to
   ]]></param>
</method>
<method name='interpolateColor' fullname='cv:Orion/interpolateColor' isStatic='true' isFinal='false' isOverride='false'  param_names='fromColor;toColor;progress' param_types='uint;uint;Number' param_defaults='undefined;undefined;undefined' result_type='uint'>
<description><![CDATA[
   Finds a color that's between the two numbers given.
   
   ]]></description>
<internal><![CDATA[Utility function
   
   ]]></internal>
<param><![CDATA[fromColor<uint> The first color
   ]]></param>
<param><![CDATA[toColor<uint> The second color
   ]]></param>
<param><![CDATA[progress<Number> The ratio between the two colors you want returned.
   ]]></param>
<return><![CDATA[The color between the two colors.
   ]]></return>
</method>
<method name='interpolateTransform' fullname='cv:Orion/interpolateTransform' isStatic='true' isFinal='false' isOverride='false'  param_names='fromColor;toColor;progress' param_types='flash.geom:ColorTransform;flash.geom:ColorTransform;Number' param_defaults='undefined;undefined;undefined' result_type='flash.geom:ColorTransform'>
<description><![CDATA[
   Finds a ColorTransform that's between the two ColorTransforms given.
   
   ]]></description>
<internal><![CDATA[Utility function
   
   ]]></internal>
<param><![CDATA[fromColor<ColorTransform> The first ColorTransform
   ]]></param>
<param><![CDATA[toColor<ColorTransform> The second ColorTransform
   ]]></param>
<param><![CDATA[progress<Number> The ratio between the two ColorTransforms you want returned.
   ]]></param>
<return><![CDATA[The ColorTransform between the two ColorTransforms.
   ]]></return>
</method>
<method name='killGarbage' fullname='cv:Orion/killGarbage' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:TimerEvent' param_defaults='null' result_type='void'>
<description><![CDATA[
   This will run ever 2 seconds and remove any inactive particles from memory.
   
   ]]></description>
<default><![CDATA[null
   ]]></default>
<param><![CDATA[e The event dispatched.
   ]]></param>
</method>
<method name='pause' fullname='cv:Orion/pause' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Pauses the particle system
   ]]></description>
</method>
<method name='play' fullname='cv:Orion/play' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Resumes or plays the particle system
   ]]></description>
</method>
<method name='randomRange' fullname='cv:Orion/protected:randomRange' isStatic='true' isFinal='false' isOverride='false'  param_names='min;max' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[
   Return a random number between a range of numbers
   
   ]]></description>
<internal><![CDATA[Utility function
   
   ]]></internal>
<param><![CDATA[min<Number> The minimum number in the range
   ]]></param>
<param><![CDATA[max<Number> The maximum number in the range
   ]]></param>
<return><![CDATA[A random number between the two numbers given.
   ]]></return>
</method>
<method name='recycleParticle' fullname='cv:Orion/protected:recycleParticle' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='cv.orion:ParticleVO' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Removes a particle and stores the reference to the particle inside 
   of the recyclebin dictionary.
   
   ]]></description>
<param><![CDATA[d The particle to be recycled
   ]]></param>
</method>
<method name='removeAllParticles' fullname='cv:Orion/removeAllParticles' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Removes all particles from the emitter.
   This also frees up any memory used by the particles.
   ]]></description>
</method>
<method name='removeItem' fullname='cv:Orion/removeItem' isStatic='true' isFinal='false' isOverride='false'  param_names='array;item' param_types='Array' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[
   Removes a specified item from the array.
   
   ]]></description>
<internal><![CDATA[Utility function
   
   ]]></internal>
<param><![CDATA[array The array to go through
   ]]></param>
<param><![CDATA[item The item to be removed
   ]]></param>
<return><![CDATA[A boolean whether it was successful or not
   ]]></return>
</method>
<method name='removeParticle' fullname='cv:Orion/protected:removeParticle' isStatic='false' isFinal='false' isOverride='false'  param_names='p;doArray' param_types='cv.orion:ParticleVO;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[
   Removes a particle. This is typically called during the garbage 
   collection phase of a particle's life.
   
   ]]></description>
<param><![CDATA[d The particle to be removed.
   ]]></param>
<param><![CDATA[doArray Whether to remove from the particle array or not.
   ]]></param>
</method>
<method name='render' fullname='cv:Orion/render' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[
   Updates all the particles and positions, updates the output class as well.
   
   ]]></description>
<default><![CDATA[null
   ]]></default>
<param><![CDATA[e The event dispatched.
   ]]></param>
</method>
<method name='renderParticle' fullname='cv:Orion/protected:renderParticle' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='cv.orion:ParticleVO' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Updates the specific particle based on the filters assigned to the emitter.
   Also handles any garbage clean up.
   
   ]]></description>
<param><![CDATA[d The particle to be rendered and updated.
   ]]></param>
</method>
<method name='resetParticle' fullname='cv:Orion/protected:resetParticle' isStatic='false' isFinal='false' isOverride='false'  param_names='p' param_types='cv.orion:ParticleVO' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   Resets the particle and initializes it for use.
   
   ]]></description>
<param><![CDATA[d The particle to be rendered and updated.
   ]]></param>
</method>
<method name='rotateCoord' fullname='cv:Orion/rotateCoord' isStatic='true' isFinal='false' isOverride='false'  param_names='x;y;sin;cos' param_types='Number;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='flash.geom:Point'>
<description><![CDATA[
   Takes a given coordinate and rotates it in a 2D space. This is used
   for calculations like collosions detection.
   
   ]]></description>
<internal><![CDATA[Utility function
   
   ]]></internal>
<param><![CDATA[x<Number> The x coordinate
   ]]></param>
<param><![CDATA[y<Number> The y coordinate
   ]]></param>
<param><![CDATA[sin<Number> The sine of the angle to rotate
   ]]></param>
<param><![CDATA[cos<Number> The cosine of the angle to rotate
   ]]></param>
<param><![CDATA[reverse<Number> Which direction to rotate
   ]]></param>
<return><![CDATA[The adjusted point after rotation.
   ]]></return>
</method>
<method name='stageHandler' fullname='cv:Orion/protected:stageHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   The stage handler, this listens for the Event.ADDED_TO_STAGE event,
   so it knows when it can access the stage property. If the emitter is
   not part of the display list, it will automatically pause itself.
   
   ]]></description>
<param><![CDATA[e The event dispatched.
   ]]></param>
</method>
<method name='tick' fullname='cv:Orion/private:tick' isStatic='true' isFinal='false' isOverride='false'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   This is called each time the reference shape enters a new frame.
   
   ]]></description>
<param><![CDATA[e
   ]]></param>
</method>
<method name='update' fullname='cv:Orion/update' isStatic='false' isFinal='false' isOverride='false'  param_names='emitter' param_types='cv:Orion' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   This acts as a fake output update function for use by the Update
   and Destroy emitters.
   
   ]]></description>
<param><![CDATA[emitter The emitter to be used.
   ]]></param>
</method>
<method name='cacheFrames' fullname='cv:Orion/cacheFrames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
   The storage location for frames that are cached. Used by filters and emitters.
   ]]></description>
</method>
<method name='cacheTarget' fullname='cv:Orion/cacheTarget/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:MovieClip'>
<description><![CDATA[
   Gets the frame cache movieclip. This is the movieclip that has had
   it's frames cached.
   ]]></description>
</method>
<method name='height' fullname='cv:Orion/height/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets or sets the height of the emitter.
   ]]></description>
</method>
<method name='particles' fullname='cv:Orion/particles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[
   The array of all the particles in this instance of Orion
   ]]></description>
</method>
<method name='paused' fullname='cv:Orion/paused/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   Gets or sets the paused property
   ]]></description>
</method>
<method name='spriteClass' fullname='cv:Orion/spriteClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Class'>
<description><![CDATA[
         Gets or sets the specific library linkId (class reference)
   ]]></description>
</method>
<method name='useFrameCaching' fullname='cv:Orion/useFrameCaching/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   Gets or sets whether frame caching will be enabled. Frame caching takes a snapshot
   of each frame of a movieclip and stores the bitmaps in an array. This bitmapdata is
   used later for new particles. This can greatly improve performance on occasion (especially
   movieclips with lots of fiters used inside or multiple frames).
   ]]></description>
</method>
<method name='width' fullname='cv:Orion/width/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets or sets the width of the emitter.
   ]]></description>
</method>
<method name='x' fullname='cv:Orion/x/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets or sets the x position of the emitter.
   
   ]]></description>
<see><![CDATA[Orion#getCoordinate()
   ]]></see>
<see><![CDATA[Orion#y
   ]]></see>
</method>
<method name='y' fullname='cv:Orion/y/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets or sets the y position of the emitter.
   
   ]]></description>
<see><![CDATA[Orion#getCoordinate()
   ]]></see>
<see><![CDATA[Orion#x
   ]]></see>
</method>
<method name='height' fullname='cv:Orion/height/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='paused' fullname='cv:Orion/paused/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='spriteClass' fullname='cv:Orion/spriteClass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Class' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='useFrameCaching' fullname='cv:Orion/useFrameCaching/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='width' fullname='cv:Orion/width/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='cv:Orion/x/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='cv:Orion/y/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='DEG2RAD' fullname='cv:Orion/DEG2RAD' type='Number' isStatic='true' isConst='true' defaultValue='0.017453292519943295' >
<description><![CDATA[
   Stored decimal value for conversion
   ]]></description>
</field>
<field name='VERSION' fullname='cv:Orion/VERSION' type='String' isStatic='true' isConst='true' defaultValue='1.0.0' >
<description><![CDATA[
   The current version of Orion.
   ]]></description>
</field>
<field name='_cacheFrames' fullname='cv:Orion/protected:_cacheFrames' type='Array' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_cacheTarget' fullname='cv:Orion/protected:_cacheTarget' type='flash.display:MovieClip' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_clr' fullname='cv:Orion/protected:_clr' type='flash.geom:ColorTransform' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_coordPoint' fullname='cv:Orion/protected:_coordPoint' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_emitter' fullname='cv:Orion/protected:_emitter' type='flash.geom:Rectangle' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_eventChange' fullname='cv:Orion/protected:_eventChange' type='flash.events:Event' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_eventResize' fullname='cv:Orion/protected:_eventResize' type='flash.events:Event' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_eventTick' fullname='cv:Orion/protected:_eventTick' type='flash.events:Event' isStatic='true' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_particles' fullname='cv:Orion/protected:_particles' type='flash.utils:Dictionary' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_paused' fullname='cv:Orion/protected:_paused' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_shape' fullname='cv:Orion/protected:_shape' type='flash.display:Shape' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_spriteClass' fullname='cv:Orion/protected:_spriteClass' type='Class' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_timer' fullname='cv:Orion/protected:_timer' type='flash.utils:Timer' isStatic='true' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_useFrameCaching' fullname='cv:Orion/protected:_useFrameCaching' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='cacheBlendMode' fullname='cv:Orion/cacheBlendMode' type='String' isStatic='false' isConst='false' defaultValue='normal' >
<description><![CDATA[
   Gets or sets the blend mode applied to particles when they are created. It is also
   used when caching particles.
   ]]></description>
</field>
<field name='cachePixelSnapping' fullname='cv:Orion/cachePixelSnapping' type='String' isStatic='false' isConst='false' defaultValue='auto' >
<description><![CDATA[
   Gets or sets pixel snapping when frame caching is enabled. Pixel snapping
   determines whether or not the Bitmap object is snapped to the nearest pixel.
   ]]></description>
</field>
<field name='cacheSmoothing' fullname='cv:Orion/cacheSmoothing' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   Gets or sets bitmap smoothing when using frame caching.
   ]]></description>
</field>
<field name='canvas' fullname='cv:Orion/canvas' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[
   The canvas is used to control the boundaries (edge filter) of the particles animating.
   ]]></description>
</field>
<field name='createEmitters' fullname='cv:Orion/createEmitters' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   Triggers the emitters everytime a particle from this emitter
   is created. This allows for effects like the explosion before a firework goes up.
   
   This array can only accept instances of the Orion class.
   
   When using this, specify the output of the child emitter to the parent emitter.
   ]]></description>
</field>
<field name='debug' fullname='cv:Orion/debug' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   Turns on debug lines to outline the emitter and canvas dimensions
   ]]></description>
</field>
<field name='destroyEmitters' fullname='cv:Orion/destroyEmitters' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   Triggers the emitters everytime a particle from this emitter
   is destroyed. This allows for effects like the explosion after a firework goes up.
   
   This array can only accept instances of the Orion class.
   
   When using this, specify the output of the child emitter to the parent emitter.
   ]]></description>
</field>
<field name='edgeFilter' fullname='cv:Orion/edgeFilter' type='cv.orion.interfaces:IFilter' isStatic='false' isConst='false' >
<description><![CDATA[
   Gets or sets the edge filter used by the emitter to determine what the particles
   will do when they hit the edge. Pass nothing to it in order to reset it.
   ]]></description>
</field>
<field name='effectFilters' fullname='cv:Orion/effectFilters' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   Gets the filters being applied by the emitter.
   ]]></description>
</field>
<field name='output' fullname='cv:Orion/output' type='cv.orion.interfaces:IOutput' isStatic='false' isConst='false' >
<description><![CDATA[
         Gets or sets the output class used. The default is the <code>null</code>.
   ]]></description>
</field>
<field name='particlesVisible' fullname='cv:Orion/particlesVisible' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[
   As the particles are updated, this will toggle visibility on or off.
   Used by the BitmapRenderer/PixelRenderer so it can hide the particles
   without additional overhead.
   ]]></description>
</field>
<field name='settings' fullname='cv:Orion/settings' type='Object' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   The settings object controls all configuration. The settings object can contain the following properties :
   <br/><br/>
   <ul>
   <li> lifeSpan:int - The lifespan of the particle in milliseconds. After that time is up, it is removed from display. (In milliseconds)
   <li> mass:Number - The mass of a particle. The larger, the harder it is to move.
   <li> opacity:Number - The initial alpha of a particle. From 0 to 1.
   <li> opacityMin:Number - The minimum alpha in a range for the particle randomly initially. From 0 to 1.
   <li> opacityMax:Number - The maximum alpha in a range for the particle randomly initially. From 0 to 1.
   <li> velocityX:Number - The initial X velocity of a particle.
   <li> velocityXMin:Number - The minimum X velocity in a range to move the particle randomly initially.
   <li> velocityXMax:Number - The maximum X velocity in a range to move the particle randomly initially.
   <li> velocityY:Number - The initial Y velocity of a particle.
   <li> velocityYMin:Number - The minimum Y velocity in a range to move the particle randomly initially.
   <li> velocityYMax:Number - The maximum Y velocity in a range to move the particle randomly initially.
   <li> velocityRotate:Number - The initial spinning velocity of a particle.
   <li> velocityRotateMin:Number - The minimum spin in a range to spin the particle randomly initially.
   <li> velocityRotateMax:Number - The maximum spin in a range to spin the particle randomly initially.
   <li> velocityAngle:Number - The direction the particle will move in. From 0 to 360.
   <li> velocityAngleMin:Number - The minimum angle in a range to move in a random direction. From 0 to 360.
   <li> velocityAngleMax:Number - The maximum angle in a range to move in a random direction. From 0 to 360.
   <li> rotate:Number - The initial rotation of a particle. From 0 to 360.
   <li> rotateMin:Number - The minimum rotation in a range to rotate the particle randomly initially. From 0 to 360.
   <li> rotateMax:Number - The maximum rotation in a range to rotate the particle randomly initially. From 0 to 360.
   <li> scale:Number - The initial scale of a particle.
   <li> scaleMin:Number - The minimum scale in a range to scale the particle randomly initially.
   <li> scaleMax:Number - The maximum scale in a range to scale the particle randomly initially.
   <li> color:int - The initial tint of a particle.
   <li> colorMin:int - The minimum color in a range to tint the particle randomly initially.
   <li> colorMax:int - The maximum color in a range to tint the particle randomly initially.
   <li> selectRandomFrame:Boolean - If a frame is randomly selected initially.
   <li> numberOfParticles:Number - How many particles to create each time a particle is emitted.
   </ul>
   ]]></description>
</field>
<field name='time' fullname='cv:Orion/time' type='int' isStatic='true' isConst='false' >
<description><![CDATA[
   Current Time
   ]]></description>
</field>
<field name='updateEmitters' fullname='cv:Orion/updateEmitters' type='Array' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   Triggers the emitters everytime a particle from this emitter
   gets updated. This allows for effects like trailing smoke of a particle.
   
   This array can only accept instances of the Orion class.
   
   When using this, specify the output of the child emitter to the parent emitter.
   ]]></description>
</field>
<field name='useCacheAsBitmap' fullname='cv:Orion/useCacheAsBitmap' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   Gets or sets whether bitmap caching is enabled on particles used within this emitter. 
   If set to true, Flash Player or Adobe AIR caches an internal bitmap representation of 
   the display object. This caching can increase performance for display objects that 
   contain complex vector content.
   ]]></description>
</field>
<packageRec name='cv.null' fullname='cv.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='OrionContainer' fullname='cv:OrionContainer' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\OrionContainer.as' namespace='cv' access='public' baseclass='cv:Orion' isFinal='false' isDynamic='false' >
<description><![CDATA[
  OrionContainer takes a movieclip and animates the children inside
  of it as if they were particles. Does not add any new particles to the system.
  
  Also any changes to the dimensions or position of the emitter are ignored.
     ]]></description>
</classRec>
<method name='OrionContainer' fullname='cv:OrionContainer/OrionContainer' isStatic='false' isFinal='false' isOverride='false'  param_names='target;config' param_types='flash.display:DisplayObjectContainer;Object' param_defaults='undefined;null' result_type='*'>
<description><![CDATA[
   The constructor for OrionContainer is slightly different from Orion. You cannot specify an output class
   becuase it is not used by OrionContainer. No new particles are created so there is nothing to output. Secondly
   you cannot specify framecaching becuase again, no new particles are created while this runs. 
   
   When the constructor runs, the canvas is automatically set to the stage dimensions (if available) and 
   corrects for the target's position.
   
   In debug mode, the emitter is positioned according to the coordinates of the target's parent. For
   the emitter to be positioned accurately, OrionContainer must be attached to the same DisplayObject
   as the target. This is only for the debug lines to be accurate, it's not required for anything else.
   
   ]]></description>
<param><![CDATA[target<DisplayObject> The display object to use.
   ]]></param>
<param><![CDATA[assignChildren<Boolean> Whether to add the target or the children inside the target.
   ]]></param>
<param><![CDATA[config Here you can pass in a <code>configuration</code> object. A <code>configuration</code> object is generated by a 
   preset or you can write one by hand. Each <code>configuration</code> object can contain an <code>effectFilters</code> array, an
   <code>edgeFilter</code> object, and a <code>settings</code> object. The <code>settings</code> object can contain all the same properties that
   modifying the <code>settings</code> property directly allows.<br/><br/>If no config is passed, OrionContainer will automatically pause
   to allow the settings object to be configured before starting.
   ]]></param>
</method>
<method name='applySettings' fullname='cv:OrionContainer/applySettings' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
</method>
<method name='emit' fullname='cv:OrionContainer/emit' isStatic='false' isFinal='false' isOverride='true'  param_names='point' param_types='flash.geom:Point' param_defaults='null' result_type='void'>
<description><![CDATA[
   Stops Orion from creating new particles.
   
   ]]></description>
<param><![CDATA[point Where to position the particle
   ]]></param>
</method>
<method name='height' fullname='cv:OrionContainer/height/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets the height of the emitter, setting is disabled.
   ]]></description>
</method>
<method name='spriteClass' fullname='cv:OrionContainer/spriteClass/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Class'>
<description><![CDATA[
         The spriteClass property is disabled with this emitter.
   ]]></description>
</method>
<method name='spriteTarget' fullname='cv:OrionContainer/spriteTarget/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObjectContainer'>
<description><![CDATA[
         The SpriteTarget property is OrionContainer's equivalent of SpriteClass.
         This sets the target to use as particles.
   ]]></description>
</method>
<method name='useFrameCaching' fullname='cv:OrionContainer/useFrameCaching/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[
   The useFrameCaching property is disabled with this emitter.
   ]]></description>
</method>
<method name='width' fullname='cv:OrionContainer/width/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets the width of the emitter, setting is disabled.
   ]]></description>
</method>
<method name='x' fullname='cv:OrionContainer/x/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets the x position of the emitter, setting is disabled.
   
   ]]></description>
<see><![CDATA[Orion#getCoordinate()
   ]]></see>
<see><![CDATA[Orion#y
   ]]></see>
</method>
<method name='y' fullname='cv:OrionContainer/y/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[
   Gets the y position of the emitter, setting is disabled.
   
   ]]></description>
<see><![CDATA[Orion#getCoordinate()
   ]]></see>
<see><![CDATA[Orion#x
   ]]></see>
</method>
<method name='height' fullname='cv:OrionContainer/height/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='spriteClass' fullname='cv:OrionContainer/spriteClass/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Class' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='spriteTarget' fullname='cv:OrionContainer/spriteTarget/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.display:DisplayObjectContainer' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='useFrameCaching' fullname='cv:OrionContainer/useFrameCaching/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='width' fullname='cv:OrionContainer/width/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='cv:OrionContainer/x/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='cv:OrionContainer/y/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_spriteTarget' fullname='cv:OrionContainer/private:_spriteTarget' type='flash.display:DisplayObjectContainer' isStatic='false' isConst='false' >
</field>
<field name='offSet' fullname='cv:OrionContainer/offSet' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[
   This offset is used by the BitmapRenderer to fix render issues.
   This is set automatically by assignParticles(), but is public to
   allow for custom alignment if necessary.
   ]]></description>
</field>
<packageRec name='cv.null' fullname='cv.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='OrionBitmap' fullname='cv:OrionBitmap' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\OrionBitmap.as' namespace='cv' access='public' baseclass='cv:Orion' isFinal='false' isDynamic='false' >
<description><![CDATA[
  OrionBitmap emits particles where ever the specified color is on the parent
  of the emitter. OrionBitmap takes a snapshot of it's parent when added to the display
  list. This image is used while it runs.
     ]]></description>
</classRec>
<method name='OrionBitmap' fullname='cv:OrionBitmap/OrionBitmap' isStatic='false' isFinal='false' isOverride='false'  param_names='spriteClass;output;config;useFrameCaching' param_types='Class;cv.orion.interfaces:IOutput;Object;Boolean' param_defaults='null;null;null;false' result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orion#Orion() ]]></copy>
</method>
<method name='getCoordinate' fullname='cv:OrionBitmap/protected:getCoordinate' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.geom:Point'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orion#getCoordinate() ]]></copy>
</method>
<method name='render' fullname='cv:OrionBitmap/render' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='null' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orion#render() ]]></copy>
</method>
<method name='stageHandler' fullname='cv:OrionBitmap/protected:stageHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orionr#stageHandler()  ]]></copy>
</method>
<method name='updateBitmap' fullname='cv:OrionBitmap/updateBitmap' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Updates the bitmapdata of the target display object if it has changed.
   ]]></description>
</method>
<method name='updateIntersection' fullname='cv:OrionBitmap/protected:updateIntersection' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[
   Update the intersecting rectangle.
   Only emit particles within the emitter and within the bounds of the image.
   ]]></description>
</method>
<method name='target' fullname='cv:OrionBitmap/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='flash.display:DisplayObject'>
<description><![CDATA[
   The display object to use as a reference for the bitmapdata. This is the object
   that is actually drawn from and the dimensions are grabbed from. If no target is
   specified, then it will default to the parent of the emitter.
   
   ]]></description>
<default><![CDATA[this.parent
   ]]></default>
</method>
<method name='targetColor' fullname='cv:OrionBitmap/targetColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[
   The target color to attach particles to within the bitmap.
   
   ]]></description>
<default><![CDATA[0xFFFFFFFF
   ]]></default>
</method>
<method name='height' fullname='cv:OrionBitmap/height/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='target' fullname='cv:OrionBitmap/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='flash.display:DisplayObject' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='targetColor' fullname='cv:OrionBitmap/targetColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='cv:OrionBitmap/width/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='x' fullname='cv:OrionBitmap/x/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<method name='y' fullname='cv:OrionBitmap/y/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='POINT' fullname='cv:OrionBitmap/protected:POINT' type='flash.geom:Point' isStatic='false' isConst='true' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_targetColor' fullname='cv:OrionBitmap/protected:_targetColor' type='Number' isStatic='false' isConst='false' defaultValue='0xFFFFFF' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_targetObject' fullname='cv:OrionBitmap/protected:_targetObject' type='flash.display:DisplayObject' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='bmData' fullname='cv:OrionBitmap/protected:bmData' type='flash.display:BitmapData' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='isRandom' fullname='cv:OrionBitmap/isRandom' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[
   If true, it ignores speedX and speedY and randomly chooses a point within
   the emitter.
   
   ]]></description>
<default><![CDATA[false
   ]]></default>
</field>
<field name='offSet' fullname='cv:OrionBitmap/protected:offSet' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='pHeight' fullname='cv:OrionBitmap/protected:pHeight' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='pWidth' fullname='cv:OrionBitmap/protected:pWidth' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='point' fullname='cv:OrionBitmap/protected:point' type='flash.geom:Point' isStatic='false' isConst='false' defaultValue='' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='rectColorBounds' fullname='cv:OrionBitmap/protected:rectColorBounds' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='rectIntersect' fullname='cv:OrionBitmap/protected:rectIntersect' type='flash.geom:Rectangle' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='scanX' fullname='cv:OrionBitmap/protected:scanX' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='speedX' fullname='cv:OrionBitmap/speedX' type='Number' isStatic='false' isConst='false' defaultValue='6' >
<description><![CDATA[
   The X speed that the emitter scans the bitmap and adds particles.
   
   ]]></description>
<default><![CDATA[6
   ]]></default>
<see><![CDATA[OrionBitmap#speedY
   ]]></see>
</field>
<field name='speedY' fullname='cv:OrionBitmap/speedY' type='Number' isStatic='false' isConst='false' defaultValue='2' >
<description><![CDATA[
   The Y speed that the emitter scans the bitmap and adds particles.
   
   ]]></description>
<default><![CDATA[2
   ]]></default>
<see><![CDATA[OrionBitmap#speedX
   ]]></see>
</field>
<field name='startY' fullname='cv:OrionBitmap/protected:startY' type='Number' isStatic='false' isConst='false' defaultValue='0' >
</field>
<field name='xpos' fullname='cv:OrionBitmap/protected:xpos' type='Number' isStatic='false' isConst='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='ypos' fullname='cv:OrionBitmap/protected:ypos' type='Number' isStatic='false' isConst='false' defaultValue='0' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<packageRec name='cv.null' fullname='cv.null'>
<description><![CDATA[
Orion ©2009 Gabriel Mariani. February 6th, 2009
Visit http://blog.coursevector.com/orion for documentation, updates and more free code.
Copyright (c) 2009 Gabriel Mariani

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the "Software"), to deal in the Software without
restriction, including without limitation the rights to use,
copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following
conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
]]></description>
</packageRec>
<classRec name='OrionMouse' fullname='cv:OrionMouse' sourcefile='H:\SVN\CourseVector\projects\orion\src\cv\OrionMouse.as' namespace='cv' access='public' baseclass='cv:Orion' isFinal='false' isDynamic='false' >
<description><![CDATA[
  OrionMouse emits particles from the mouse. Useful for effects like a mouse trailer.
     ]]></description>
</classRec>
<method name='OrionMouse' fullname='cv:OrionMouse/OrionMouse' isStatic='false' isFinal='false' isOverride='false'  param_names='spriteClass;output;config;useFrameCaching' param_types='Class;cv.orion.interfaces:IOutput;Object;Boolean' param_defaults='null;null;null;false' result_type='*'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orion#Orion() ]]></copy>
</method>
<method name='emit' fullname='cv:OrionMouse/emit' isStatic='false' isFinal='false' isOverride='true'  param_names='point' param_types='flash.geom:Point' param_defaults='null' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orion#emit() ]]></copy>
</method>
<method name='getCoordinate' fullname='cv:OrionMouse/protected:getCoordinate' isStatic='false' isFinal='false' isOverride='true'  result_type='flash.geom:Point'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orion#getCoordinate() ]]></copy>
</method>
<method name='leaveHandler' fullname='cv:OrionMouse/protected:leaveHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[
   The mouse move handler, this listens for the MouseEvent.MOUSE_MOVE event,
   so it knows when to enable or disable the trailer. It also listens for
   the Event.MOUSE_LEAVE, to enable/disable when the mosue is off the stage.
   
   ]]></description>
<param><![CDATA[event<MouseEvent> The event dispatched.
   ]]></param>
</method>
<method name='stageHandler' fullname='cv:OrionMouse/protected:stageHandler' isStatic='false' isFinal='false' isOverride='true'  param_names='e' param_types='flash.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<copy><![CDATA[cv.Orionr#stageHandler()  ]]></copy>
</method>
<method name='onlyOnMouseMove' fullname='cv:OrionMouse/onlyOnMouseMove/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[
   Causes the trailer to only emit particles when the user moves their mouse.
   
   ]]></description>
<default><![CDATA[true
   ]]></default>
</method>
<method name='onlyOnMouseMove' fullname='cv:OrionMouse/onlyOnMouseMove/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</method>
<field name='_leaveEnabled' fullname='cv:OrionMouse/private:_leaveEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_mouseEnabled' fullname='cv:OrionMouse/private:_mouseEnabled' type='Boolean' isStatic='false' isConst='false' defaultValue='false' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
<field name='_onlyOnMouseMove' fullname='cv:OrionMouse/private:_onlyOnMouseMove' type='Boolean' isStatic='false' isConst='false' defaultValue='true' >
<description><![CDATA[ ]]></description>
<private><![CDATA[]]></private>
</field>
</asdoc>
